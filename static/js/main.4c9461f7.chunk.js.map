{"version":3,"sources":["components/SideBar/IconButtonLink.tsx","components/SideBar/MenuListItem.tsx","components/SideBar/SideBar.tsx","data/portfolio.ts","components/TopPage/TopPage.tsx","components/PortfolioPage/PortfolioPage.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["IconButtonLink","url","icon","IconButton","className","size","href","MenuListItem","text","anchor","to","ListItem","button","ListItemIcon","ListItemText","primary","SideBar","iconData","element","GitHub","LinkedIn","Twitter","src","alt","menuList","Person","FolderSpecial","Assessment","LaptopMac","length","map","i","index","key","Button","variant","startIcon","Description","Divider","List","component","list","portfolioData","id","serviceName","serviceThumbnail","serviceDescription","appIcons","usages","headline","description","image","features","memo","webUrl","githubUrl","TopPage","document","title","skillSets","icons","myValues","Favorite","FindReplace","Group","skill","value","portfolio","Link","RouterLink","ScrollToTop","pathname","useLocation","React","useEffect","window","scrollTo","PortfolioPage","props","portfolioId","match","params","portfolio_id","data","find","Number","usage","feature","appstoreUrl","googleplayUrl","App","exact","path","Boolean","location","hostname","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.4c9461f7.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./IconButtonLink.scss\";\nimport { IconButton } from \"@material-ui/core/\";\n\nconst IconButtonLink: React.FC<any | null> = ({ url, icon }) => {\n  return (\n    <IconButton className='icon-button' size='medium' href={url}>\n      {icon}\n    </IconButton>\n  );\n};\n\nexport default IconButtonLink;\n","import React from \"react\";\nimport \"./MenuListItem.scss\";\nimport { ListItem, ListItemIcon, ListItemText } from \"@material-ui/core/\";\nimport { HashLink } from \"react-router-hash-link\";\n\nconst MenuListItem: React.FC<any | null> = ({ text, icon, anchor }) => {\n  return (\n    <HashLink className=\"headline-link\" to={`/portfolio#${anchor}`}>\n      <ListItem button className='headline-list-item'>\n        <ListItemIcon className='headline-icon'>{icon}</ListItemIcon>\n        <ListItemText className='headline-text' primary={text} />\n      </ListItem>\n    </HashLink>\n  );\n};\n\nexport default MenuListItem;\n","import React from \"react\";\nimport \"./SideBar.scss\";\nimport { Button, List, Divider } from \"@material-ui/core/\";\nimport { GitHub, LinkedIn, Twitter, Person, FolderSpecial, Assessment, LaptopMac, Description } from \"@material-ui/icons/\";\nimport IconButtonLink from \"./IconButtonLink\";\nimport MenuListItem from \"./MenuListItem\";\n\nconst SideBar: React.FC = () => {\n  const iconData = [\n    { url: \"https://github.com/nk18chi\", element: <GitHub /> },\n    { url: \"https://www.linkedin.com/in/naoki-mita-ab186839/\", element: <LinkedIn /> },\n    { url: \"https://twitter.com/naokien1\", element: <Twitter /> },\n    { url: \"https://leetcode.com/nk18chi/\", element: <img src='/portfolio/img/icon/leetcode.svg' alt='' /> },\n  ];\n\n  const menuList = [\n    { text: \"About Me\", icon: <Person />, anchor: \"about-me\" },\n    { text: \"Skill Sets\", icon: <FolderSpecial />, anchor: \"skill-sets\" },\n    { text: \"My Values\", icon: <Assessment />, anchor: \"my-values\" },\n    { text: \"Portfolios\", icon: <LaptopMac />, anchor: \"portfolios\" },\n  ];\n\n  return (\n    <div className='side-bar'>\n      <div className='profile'>\n        <h2>Naoki Mita</h2>\n        <img src='/portfolio/img/main.jpg' alt='' />\n        <p>Hello, my name is Naoki Mita. I am a software developer. Take a look at my personal page!</p>\n      </div>\n\n      <div className='social-link'>\n        <ul>{iconData.length > 0 && iconData.map((i: any, index: number) => <IconButtonLink key={index} url={i.url} icon={i.element} />)}</ul>\n      </div>\n\n      <Button\n        href='https://docs.google.com/document/d/1GVcJ-RGKe2-6iPmtFZniVHD4ZNM1zV9tcE2bVAeZGpU/edit'\n        className='black-btn'\n        variant='contained'\n        size='large'\n        startIcon={<Description />}\n      >\n        View Resume\n      </Button>\n      <Divider className='divider' />\n\n      <div className='headline'>\n        <List component='nav'>\n          {menuList.length > 0 &&\n            menuList.map((list: any, index: number) => <MenuListItem key={index} text={list.text} icon={list.icon} anchor={list.anchor} />)}\n        </List>\n      </div>\n    </div>\n  );\n};\n\nexport default SideBar;\n","export const portfolioData = [\n  {\n    id: 1,\n    serviceName: \"Venture Desk\",\n    serviceThumbnail: \"/portfolio/img/portfolio/vd_thumbnail.jpg\",\n    serviceDescription: \"Users can book a meeting room through this app and apply for a membership that can make use of working space.\",\n    appIcons: [\n      \"/portfolio/img/icon/typescript.svg\",\n      \"/portfolio/img/icon/react.svg\",\n      \"/portfolio/img/icon/firebase.svg\",\n      \"/portfolio/img/icon/sass.svg\",\n    ],\n    usages: [\n      {\n        headline: \"User can check all meeting rooms\",\n        description: \"Those meeting room data are fetched from Firebase Database\",\n        image: \"/portfolio/img/portfolio/vd_search_meeting_room.jpg\",\n      },\n      {\n        headline: \"Book a meeting room via through a form\",\n        description: \"\",\n        image: \"/portfolio/img/portfolio/vd_booking.jpg\",\n      },\n      {\n        headline: \"Manage booking information that users applied for by admin-user\",\n        description: \"Admin user can read and create, update the booking information on admin-page. This is built by react-admin with Firebase.\",\n        image: \"/portfolio/img/portfolio/vd_admin_booking.jpg\",\n      },\n      {\n        headline: \"The mail is sent to admin-user when use book a meeting room.\",\n        description: \"This function is for admin-user not to overlook a booking user applied. This mail sending system is used by Firebase Functions\",\n        image: \"/portfolio/img/portfolio/vd_mail.jpg\",\n      },\n      {\n        headline: \"The booking is going to be fixed if admin-user allow\",\n        description: \"Other users can make sure whether to book the room at time they want or not.\",\n        image: \"/portfolio/img/portfolio/vd_schedule.jpg\",\n      },\n      {\n        headline: \"User have to register to book the meeting\",\n        description:\n          \"The authentication to handle register and log-in, log-out rely on Firebase. This app verifies whether the email that user type in register page is true or not.\",\n        image: \"/portfolio/img/portfolio/vd_register.jpg\",\n      },\n    ],\n    features: [\n      {\n        headline: \"Serverless apps\",\n        description:\n          \"This is a single page application by only react and firebase. I used React Hooks to handle data instead of Redux. I used react-admin and react-big-calendar that I connect with firebase.\",\n      },\n    ],\n    // webUrl: \"\",\n    memo:\n      \"This app is not published yet because my client is making content and taking a photo. Also, I built this app for my client so that I don't plan to make this code public.\",\n  },\n  {\n    id: 2,\n    serviceName: \"Bizre\",\n    serviceThumbnail: \"/portfolio/img/portfolio/bizre_thumbnail.jpg\",\n    serviceDescription:\n      \"This app is intended for a person who deal with real estate. They can advertise their properties that are on sale or rent at no cost.\",\n    appIcons: [\"/portfolio/img/icon/python.svg\", \"/portfolio/img/icon/django.svg\", \"/portfolio/img/icon/mysql.svg\", \"/portfolio/img/icon/centos.svg\"],\n    usages: [\n      {\n        headline: \"Search for a proprty by filtering area or station, cost and so on\",\n        description: \"Users can store properties as favorites if they are logged-in.\",\n        image: \"/portfolio/img/portfolio/bizre_searchlist.jpg\",\n      },\n      {\n        headline: \"Check the information of a property in detail\",\n        description: \"User can contact with the advertiser if they are interested in.\",\n        image: \"/portfolio/img/portfolio/bizre_detail.jpg\",\n      },\n      {\n        headline: \"Register this app by email-authentication\",\n        description:\n          \"User can use features of advertising property and storing property if they register. This app requires to verify their email that they input in register page as an authentication.User can use features of advertising property and storing property if they register. This app requires to verify their email that they input in register page as an authentication. This function is used by User authentication in Django.\",\n        image: \"/portfolio/img/portfolio/bizre_register.jpg\",\n      },\n      {\n        headline: \"Add their property as advertisement\",\n        description:\n          \"Users can add their property and advertise them at no cost if they register and admin-user allow. Of course, they update and delete their items. The term of advertising is  for only 40 days. Advertiser can receive notice of expiry date before 10 days and update expiry date during this 10days. If not, it will be automatically deleted on this app.\",\n        image: \"/portfolio/img/portfolio/bizre_add_property.jpg\",\n      },\n      {\n        headline: \"Set access permission for their property\",\n        description:\n          \"If advertiser want only some people to see their property, they can set access permission. If they do not have permit, it appears 403 page. In this If advertiser want only some people to see their property, they can set access permission. If they do not have permit, it appears 403 page. Users can sent an access request to an advertiser and users can watch the property if advertiser accepts the offer.\",\n        image: \"/portfolio/img/portfolio/bizre_ar.jpg\",\n      },\n      {\n        headline: \"send a mail that users might be interested in\",\n        description:\n          \"When a property is added, this app automatically send a mail to user that might have interest in this property according to user's area and needs. User can also register their needs for this mail.\",\n        image: \"/portfolio/img/portfolio/bizre_mail.jpg\",\n      },\n    ],\n    features: [\n      {\n        headline: \"Test code by fixture and factory-boy\",\n        description:\n          \"This app has a lot of features so that it is more likely to happen bugs. To reduce this possibility, I focussed on writing test codes in particular for user authentication. \",\n        image: \"/portfolio/img/portfolio/bizre_testcode.jpg\",\n      },\n      {\n        headline: \"Make the structure of files clean\",\n        description:\n          \"Take a look at above image. In general, the bigger a product is, the more complex the code is. To avoid this problem, I strictly followed MVC design pattern. In addition, divided folder by features and separated template files from apps.\",\n      },\n    ],\n    webUrl: \"https://biz-re.com/\",\n    memo: \"I developed this app for my client. Therefore, I don't plan to make this code public.\",\n  },\n\n  {\n    id: 3,\n    serviceName: \"Webdirector Blog\",\n    serviceThumbnail: \"/portfolio/img/portfolio/wd_thumbnail.jpg\",\n    serviceDescription: \"Users can book a meeting room through this app and apply for a membership that can make use of working space.\",\n    appIcons: [\"/portfolio/img/icon/python.svg\", \"/portfolio/img/icon/django.svg\", \"/portfolio/img/icon/mysql.svg\", \"/portfolio/img/icon/centos.svg\"],\n    features: [\n      {\n        headline: \"Get more articles without loading by REST API\",\n        description: \"\",\n        image: \"/portfolio/img/portfolio/wd_restapi.gif\",\n      },\n      {\n        headline: \"Switch languages by i18n\",\n        description:\n          \"This blog can switch between Japanese and English. If an article is written by both languages, the post can switch languages. If not, move to top page in the languages.\",\n        image: \"/portfolio/img/portfolio/wd_i18n.gif\",\n      },\n      {\n        headline: \"SEO Friendly\",\n        description:\n          \"I am taking care of HTML markdown and structure of the URL path. Also, I set alternate tags in HTML because this blog supports two languages. To increase the speed of the blog, I set a cache for static files and reduce the weight of the images.\",\n      },\n    ],\n    webUrl: \"https://webdirector-blog.com/en/\",\n    githubUrl: \"https://github.com/nk18chi/webdirector-blog/\",\n  },\n  {\n    id: 4,\n    serviceName: \"Portfolio\",\n    serviceThumbnail: \"/portfolio/img/portfolio/portfolio.jpg\",\n    serviceDescription: \"I introduce myself about what I can and my products on this page. This website is built by React and Github Hosting.\",\n    appIcons: [\n      \"/portfolio/img/icon/typescript.svg\",\n      \"/portfolio/img/icon/react.svg\",\n      \"/portfolio/img/icon/github.svg\",\n      \"/portfolio/img/icon/sass.svg\",\n    ],\n    webUrl: \"https://nk18chi.github.io/portfolio/\",\n    githubUrl: \"https://github.com/nk18chi/portfolio\",\n  },\n];\n","import React from \"react\";\nimport \"./TopPage.scss\";\nimport { Link as RouterLink } from \"react-router-dom\";\nimport Link from \"@material-ui/core/Link\";\nimport { Favorite, FindReplace, Group } from \"@material-ui/icons\";\nimport { portfolioData } from \"../../data/portfolio\";\n\nconst TopPage: React.FC = () => {\n  document.title = \"Naoki Mita - portfolio, online resume\";\n  const skillSets = [\n    {\n      title: \"Typescript & React\",\n      description:\n        \"I have experience in building a React app with Firebase. I am familiar with React Hooks. I can program by Javascript but I prefer typescript to javascript. It helps me to make apps safe and find the bug easily.\",\n      icons: [\"/portfolio/img/icon/typescript.svg\", \"/portfolio/img/icon/react.svg\"],\n    },\n    {\n      title: \"Python & Django\",\n      description:\n        \"I have experience in publishing some apps that are developed by Django and MySQL. Also, I can make use of Rest API to handle data from the database and write test cases by fixtures and factory-boy.\",\n      icons: [\"/portfolio/img/icon/python.svg\", \"/portfolio/img/icon/django.svg\"],\n    },\n    {\n      title: \"Data Analysis\",\n      description:\n        \"I know how to get data from google analytics by Python(via API) or BigQuery and data from the database by SQL. I can analyze how users use your product by investigating those data and come up with a new strategy.\",\n      icons: [\"/portfolio/img/icon/google-analytics.svg\", \"/portfolio/img/icon/google-big-query.png\", \"/portfolio/img/icon/sql.svg\"],\n    },\n    {\n      title: \"Mobile Apps\",\n      description:\n        \"The experience in building web apps is bigger than one in mobile apps but I have knowledge of mobile apps as well and I am able to simple apps in iOS(Swift) and Android(Kotlin).\",\n      icons: [\"/portfolio/img/icon/apple.svg\", \"/portfolio/img/icon/android.svg\"],\n    },\n  ];\n\n  const myValues = [\n    {\n      icon: <Favorite />,\n      title: \"Passion for building apps\",\n      description: \"I love building apps and thinking about how make users comfortable. I never stop learning and building the app even free time.\",\n    },\n    {\n      icon: <FindReplace />,\n      title: \"Think efficiently\",\n      description: \"I always keep looking for the way to reduce time. I love automation and effective-algorithm.\",\n    },\n    {\n      icon: <Group />,\n      title: \"Work together well\",\n      description:\n        \"I can smoothly work with a team from other departments because I have knowledge of not only building apps but also analysis and marketing, design etc.\",\n    },\n  ];\n\n  return (\n    <article className='main-column'>\n      <section id='about-me' className='about-me block'>\n        <div className='summary-description'>\n          <h1>Naoki Mita</h1>\n          <h3>Software Developer / Data Analyst</h3>\n          <p>\n            I am a software developer specialized in frontend and backend development for web apps. Also, I have experience of being a data analyst. I\n            believe I can help you to grow up your products in every aspect. Check out my portfolio and online resume.\n          </p>\n        </div>\n        <div className='summary-image'>\n          <img className='main-thumnail' src='/portfolio/img/about_me.jpg' alt='' />\n        </div>\n      </section>\n\n      <section id='skill-sets' className='skill-sets block'>\n        <h2>Skill sets</h2>\n        <p>\n          I have experience as a software developer and a data analyst for clients in Japan. Below is a quick overview of my technical skillsets and\n          technologies I use. Check out my portfolio as well.\n        </p>\n        <ul>\n          {skillSets.length > 0 &&\n            skillSets.map((skill: any, index: number) => (\n              <li key={index} className='four-elements'>\n                <div>\n                  <ul className='icon'>\n                    {skill.icons.length > 0 &&\n                      skill.icons.map((icon: any, index: number) => (\n                        <li key={index}>\n                          <img className='app-icon' src={icon} alt='' />\n                        </li>\n                      ))}\n                  </ul>\n                </div>\n                <h3>{skill.title}</h3>\n                <p>{skill.description}</p>\n              </li>\n            ))}\n        </ul>\n      </section>\n\n      <section id='my-values' className='block'>\n        <h2>My Values</h2>\n        <ul>\n          {myValues.length > 0 &&\n            myValues.map((value: any, index: number) => (\n              <li key={index} className='three-elements'>\n                <p className='center app-big-icon'>{value.icon}</p>\n                <h3 className='center'>{value.title}</h3>\n                <p>{value.description}</p>\n              </li>\n            ))}\n        </ul>\n      </section>\n\n      <section id='portfolios' className='portfolios block'>\n        <h2>PortFolios</h2>\n        <ul>\n          {portfolioData.length > 0 &&\n            portfolioData.map((portfolio: any) => (\n              <li key={portfolio.id} className='three-elements card'>\n                <img className='portfolio-thumbnail' src={portfolio.serviceThumbnail} alt='' />\n                <div className='portfolio-description'>\n                  <h3>{portfolio.serviceName}</h3>\n                  <p>{portfolio.serviceDescription}</p>\n                  <p className='font-little-bold'>Applications</p>\n                  <ul className='icons-ul'>\n                    {portfolio.appIcons.length > 0 &&\n                      portfolio.appIcons.map((icon: any, index: number) => (\n                        <li key={index}>\n                          <img className='app-icon' src={icon} alt='' />\n                        </li>\n                      ))}\n                  </ul>\n                  <div className='view-more'>\n                    <Link component={RouterLink} to={`/portfolio/p_${portfolio.id}/`}>\n                      view more\n                    </Link>\n                  </div>\n                </div>\n              </li>\n            ))}\n        </ul>\n      </section>\n    </article>\n  );\n};\n\nexport default TopPage;\n","import React from \"react\";\nimport \"./PortfolioPage.scss\";\nimport Button from \"@material-ui/core/Button\";\nimport Link from \"@material-ui/core/Link\";\nimport LinkIcon from \"@material-ui/icons/Link\";\nimport GitHubIcon from \"@material-ui/icons/GitHub\";\nimport { useLocation } from \"react-router-dom\";\nimport { portfolioData } from \"../../data/portfolio\";\n\nfunction ScrollToTop() {\n  const { pathname } = useLocation();\n  React.useEffect(() => {\n    window.scrollTo(0, 0);\n  }, [pathname]);\n  return null;\n}\n\nconst PortfolioPage: React.FC = (props: any) => {\n  const portfolioId = props.match.params.portfolio_id;\n  const data: any = portfolioData.find((data: any) => data.id === Number(portfolioId))!;\n  document.title = `${data.serviceName} by Naoki Mita`;\n\n  return (\n    <article className='main-column'>\n      <ScrollToTop />\n      <section className='portfolio-summary block'>\n        <div className='summary-description'>\n          <h1>{data.serviceName}</h1>\n          <p>{data.serviceDescription}</p>\n          <p className='font-little-bold'>Applications</p>\n          <ul className='icon'>\n            {data.appIcons.length > 0 &&\n              data.appIcons.map((icon: any, index: number) => (\n                <li key={index}>\n                  <img className='app-icon' src={icon} alt='' />\n                </li>\n              ))}\n          </ul>\n        </div>\n        <div className='summary-image'>\n          <img className='main-thumnail' src={data.serviceThumbnail} alt='' />\n        </div>\n      </section>\n\n      {data.usages && (\n        <section className='portfolio-detail block'>\n          <h2>How to use</h2>\n          {data.usages.length > 0 &&\n            data.usages.map((usage: any, index: number) => (\n              <div key={index} className='portfolio--detail-container block'>\n                <h3 className='font-little-bold'>{usage.headline}</h3>\n                {usage.image && <img className='portfolio-detail-image' src={usage.image} alt='' />}\n                <p>{usage.description}</p>\n                <ul></ul>\n              </div>\n            ))}\n        </section>\n      )}\n\n      {data.features && (\n        <section className='portfolio-detail block'>\n          <h2>Feature points</h2>\n          {data.features.length > 0 &&\n            data.features.map((feature: any, index: number) => (\n              <div key={index} className='portfolio--detail-container block'>\n                <h3 className='font-little-bold'>{feature.headline}</h3>\n                {feature.image && <img className='portfolio-detail-image' src={feature.image} alt='' />}\n                <p>{feature.description}</p>\n                <ul></ul>\n              </div>\n            ))}\n        </section>\n      )}\n\n      <section className='portfolio-links block'>\n        <h2>Go to my app</h2>\n        <ul>\n          {data.webUrl && (\n            <li>\n              <Button href={data.webUrl} className='black-btn link-badge' variant='contained' size='large' startIcon={<LinkIcon />}>\n                Visit webpage\n              </Button>\n            </li>\n          )}\n          {data.githubUrl && (\n            <li>\n              <Button href={data.githubUrl} className='black-btn link-badge' variant='contained' size='large' startIcon={<GitHubIcon />}>\n                See on GitHub\n              </Button>\n            </li>\n          )}\n          {data.appstoreUrl && (\n            <li>\n              <div>\n                <Link href={data.appstoreUrl}>\n                  <img className='app-store-badge' src='/portfolio/img/app-store-badge.svg' alt='' />\n                </Link>\n              </div>\n            </li>\n          )}\n          {data.googleplayUrl && (\n            <li>\n              <div>\n                <Link href={data.googleplayUrl}>\n                  <img className='google-play-badge link-badge' src='/portfolio/img/google-play-badge.png' alt='' />\n                </Link>\n              </div>\n            </li>\n          )}\n        </ul>\n        {data.memo && <p>※{data.memo}</p>}\n      </section>\n    </article>\n  );\n};\n\nexport default PortfolioPage;\n","import React from \"react\";\nimport \"./index.scss\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport SideBar from \"./components/SideBar/SideBar\";\nimport TopPage from \"./components/TopPage/TopPage\";\nimport PortfolioPage from \"./components/PortfolioPage/PortfolioPage\";\n\nfunction App() {\n  return (\n    <>\n      <div className='container'>\n        <Router>\n          <SideBar />\n          <Switch>\n            <Route exact path='/portfolio/p_:portfolio_id' component={PortfolioPage} />\n            <Route exact path='/portfolio' component={TopPage} />\n          </Switch>\n        </Router>\n      </div>\n      <footer>2020 © Naoki Mita. All Rights Reserved.</footer>\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}