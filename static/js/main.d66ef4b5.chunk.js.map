{"version":3,"sources":["components/SideBar/MenuListItem.tsx","data/experiences.ts","data/privateProject.ts","components/SideBar/BaseTimeline.tsx","components/SideBar/SideBar.tsx","components/TopPage/IconButtonLink.tsx","utils/common.ts","components/TopPage/TopPage.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["MenuListItem","text","icon","anchor","children","className","to","ListItem","button","ListItemIcon","ListItemText","primary","EXPERIENCES","id","job","title","contents","company","name","description","location","startDate","Date","tools","endDate","PRIVATE_PROJECTS","serviceName","serviceDescription","githubUrl","website","BaseTimeline","lines","length","Timeline","map","line","TimelineItem","key","TimelineSeparator","TimelineDot","TimelineConnector","TimelineContent","label","SideBar","menuList","Person","timeline","exp","FolderSpecial","Assessment","LaptopMac","project","List","component","list","index","IconButtonLink","url","IconButton","size","href","formatDate","date","option","month","year","getTime","getTimezoneOffset","toLocaleDateString","calcDiffDate","start","end","res","diff","Math","floor","iconData","element","GitHub","LinkedIn","Twitter","src","alt","skillSets","favorites","link","myValues","Build","DoneAll","RateReview","Group","totalExperience","TopPage","document","Button","variant","startIcon","Description","i","c","tool","join","skill","value","favorite","target","desc","j","privateProject","App","exact","path","Boolean","window","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.d66ef4b5.chunk.js","sourcesContent":["import React from \"react\";\nimport \"./MenuListItem.scss\";\nimport { ListItem, ListItemIcon, ListItemText } from \"@material-ui/core/\";\nimport { HashLink } from \"react-router-hash-link\";\n\nconst MenuListItem: React.FC<any | null> = ({ text, icon, anchor, children }) => {\n  return (\n    <HashLink className='headline-link' to={`#${anchor}`}>\n      <ListItem button className='headline-list-item'>\n        {icon && <ListItemIcon className='headline-icon'>{icon}</ListItemIcon>}\n        <ListItemText className='headline-text' primary={`- ${text}`} />\n      </ListItem>\n    </HashLink>\n  );\n};\n\nexport default MenuListItem;\n","type TExperience = {\n  id: number;\n  job: {\n    title: string;\n    contents: string[];\n  };\n  company: {\n    name: string;\n    description: string;\n    location: string;\n  };\n  startDate: Date;\n  endDate?: Date;\n  tools: string[];\n};\n\nexport const EXPERIENCES: TExperience[] = [\n  {\n    id: 0,\n    job: {\n      title: \"Full Stack Developer\",\n      contents: [\n        \"Design and develop the C2C marketplaces which are built by MERN stack with ElasticSearch\",\n        \"Built a payment/subscription management system with Stripe from scratch\",\n        \"Develop the E-Commerce application to interact with Salesforce Commerce API and GraphQL\",\n        \"Introduce TDD culture with mocha/chai/sinon to the dev team\",\n        \"Enhance deployment frequency by using Jenkins and TDD\",\n      ],\n    },\n    company: {\n      name: \"IdyaFlow Inc\",\n      description:\n        \"Idyaflow provides a C2C marketplace software to help business owners build and scale their online businesses. The product enables them to open their own marketplace right away. The marketplace is customizable depending on their business needs and it can be like Amazon and Airbnb, Uber.\",\n      location: \"Vancouver, Canada\",\n    },\n    startDate: new Date(\"2020-08-01\"),\n    tools: [\n      \"Javascript\",\n      \"React\",\n      \"Mongo\",\n      \"Express\",\n      \"Node\",\n      \"Redux\",\n      \"React Native\",\n      \"ElasticSearch\",\n      \"GraphQL\",\n      \"Stripe\",\n      \"Salesforce Commerce API\",\n      \"Cypress\",\n      \"Mocha\",\n      \"Chai\",\n      \"Sinon\",\n      \"Jenkins\",\n      \"Docker\",\n      \"Ansible\",\n      \"Socket.io\",\n      \"CSS-in-JS\",\n      \"AWS\",\n    ],\n  },\n  {\n    id: 1,\n    job: {\n      title: \"Software Developer\",\n      contents: [\n        \"Built a meeting room booking system from scratch by using Typescript and React, Firebase.\",\n        \"Built a real estate app, in which users find properties for sale or rent, from scratch by using Python and Django, MySQL.\",\n        \"Designed test cases by using Unit testing/Factory Boy, and built a development environment to deploy smoothly.\",\n      ],\n    },\n    company: {\n      name: \"Alliance Communication\",\n      description:\n        \"Alliance Communications is an office-space leasing company that offers flexible workspaces including physical and virtual shared spaces like WeWork.\",\n      location: \"Tokyo, Japan\",\n    },\n    startDate: new Date(\"2019-04-01\"),\n    endDate: new Date(\"2020-07-31\"),\n    tools: [\"Typescript\", \"React\", \"Firebase\", \"SASS\"],\n  },\n  {\n    id: 2,\n    job: {\n      title: \"Product Manager/Data Analyst Manager\",\n      contents: [\n        \"Built, hired, and trained a team of 5 to handle marketing and analysis for all products.\",\n        \"Analyzed data with Python and BigQuery, and planned strategies for products and marketing.\",\n        \"Implemented AB test using Javascript and accomplished an increase of 20% in sales of paid subscriptions\",\n        \"Introduced data-visualized dashboards for departments by using Redash, AppScript and Pandas\",\n        \"Developed a marketing tool to analyze SEO/ Adwords / GoogleAd data by using each APIs\",\n      ],\n    },\n    company: {\n      name: \"Bengo4.com Inc\",\n      description:\n        \"Bengo4.com is a platform for connecting users to professionals such as lawyers and accountants. They offer legal consulting services and a cloud-based contract completion service like Docusign.\",\n      location: \"Tokyo, Japan\",\n    },\n    startDate: new Date(\"2014-10-01\"),\n    endDate: new Date(\"2018-10-31\"),\n    tools: [\"Python\", \"BigQuery\", \"Javascript\", \"SQL\", \"pandas\", \"App Scripts\", \"Google Analytics API\", \"Google Adwords API\", \"SEO\", \"Adwords\"],\n  },\n  {\n    id: 3,\n    job: {\n      title: \"Product Manager\",\n      contents: [\n        \"Drew product requirements for the price-comparison app for auction with user story, roadmap, and wireframes by using Sketch.\",\n        \"Planned and got approved with Auto-renewable subscriptions in iTunes, Google Play.\",\n      ],\n    },\n    company: {\n      name: \"Aucfan Co., Ltd\",\n      description: \"Aucfan provides market price quotations for online shopping and auctions, as well as a statistical price comparison service.\",\n      location: \"Tokyo, Japan\",\n    },\n    startDate: new Date(\"2013-04-01\"),\n    endDate: new Date(\"2014-09-30\"),\n    tools: [\"Sketch\"],\n  },\n];\n","type TprivateProjectData = {\n  id: number;\n  serviceName: string;\n  serviceDescription: string;\n  tools: string[];\n  githubUrl: string;\n  website?: string;\n};\n\nexport const PRIVATE_PROJECTS: TprivateProjectData[] = [\n  {\n    id: 0,\n    serviceName: \"The Chess Game\",\n    serviceDescription: \"The Chess Game is a Node application where you can play chess with another player in the command line.\",\n    tools: [\"Typescript\", \"Node\", \"Jest\", \"Circle CI\"],\n    githubUrl: \"https://github.com/nk18chi/chess-Typescript\",\n  },\n  {\n    id: 1,\n    serviceName: \"Tempmon\",\n    serviceDescription:\n      \"Tempmon is a NPM package that helps develop Node.js based applications by monitoring your directory and automatically creating initial files based on your template when a new folder is created in the directory.\",\n    tools: [\"Typescript\", \"NPM\", \"Jest\", \"GitHub Action\"],\n    website: \"https://www.npmjs.com/package/tempmon\",\n    githubUrl: \"https://github.com/nk18chi/tempmon\",\n  },\n  {\n    id: 2,\n    serviceName: \"Pelican\",\n    serviceDescription:\n      \"Pelican is an e-commerce application that sells cellular phones with data plans and charges monthly subscriptions using Stripe.\",\n    tools: [\n      \"React\",\n      \"Next.js\",\n      \"Typescript\",\n      \"Storybook\",\n      \"Jest\",\n      \"React Testing Library\",\n      \"Cypress\",\n      \"AWS\",\n      \"Chakra\",\n      \"GraphQL\",\n      \"Docker\",\n      \"GitHub Action\",\n      \"Mongo\",\n      \"Express\",\n      \"Gitflow Workflow\",\n      \"Stripe\",\n    ],\n    githubUrl: \"https://github.com/nk18chi/stripe-payment-app\",\n  },\n  {\n    id: 3,\n    serviceName: \"Leetcode - Python\",\n    serviceDescription: \"This is the repository where I have solved over 400 questions by Python, and each solution comes along with unit testing.\",\n    tools: [\"Python\", \"Unitest\"],\n    githubUrl: \"https://github.com/nk18chi/leetcode-python\",\n  },\n  {\n    id: 4,\n    serviceName: \"Ideapool\",\n    serviceDescription:\n      \"Ideapool is a brainstorming tool to generate new business ideas by showing websites and words at random and to pool your ideas in the app.\",\n    tools: [\"React\", \"Typescript\", \"Firebase\", \"SASS\"],\n    website: \"https://ideapool-app.web.app\",\n    githubUrl: \"https://github.com/nk18chi/ideapool\",\n  },\n  {\n    id: 5,\n    serviceName: \"Web Director Blog\",\n    serviceDescription: \"Web Director Blog is my blog site for my output of what I leanred.\",\n    tools: [\"Python\", \"Django\", \"MySQL\"],\n    website: \"https://webdirector-blog.com/en/\",\n    githubUrl: \"https://github.com/nk18chi/webdirector-blog\",\n  },\n  {\n    id: 6,\n    serviceName: \"Portfolio\",\n    serviceDescription: \"This is my profile site to get to know about my career and skills, which is the website you are currently browsing.\",\n    tools: [\"React\", \"Typescript\", \"SASS\"],\n    website: \"https://nk18chi.github.io\",\n    githubUrl: \"https://github.com/nk18chi/privateProject\",\n  },\n];\n","import React from \"react\";\nimport \"./BaseTimeline.scss\";\nimport { Timeline, TimelineItem, TimelineSeparator, TimelineConnector, TimelineContent, TimelineDot } from \"@material-ui/lab/\";\nimport { HashLink } from \"react-router-hash-link\";\n\ninterface BaseTimelineProps {\n  lines: {\n    key: number;\n    label: string;\n    anchor: string;\n  }[];\n}\n\nconst BaseTimeline = ({ lines }: BaseTimelineProps) => {\n  if (!lines || lines.length === 0) return null;\n  return (\n    <Timeline>\n      {lines.map((line) => (\n        <HashLink className='headline-link' to={line.anchor}>\n          <TimelineItem key={line.key}>\n            <TimelineSeparator>\n              <TimelineDot />\n              <TimelineConnector />\n            </TimelineSeparator>\n            <TimelineContent>{line.label}</TimelineContent>\n          </TimelineItem>\n        </HashLink>\n      ))}\n    </Timeline>\n  );\n};\n\nexport default BaseTimeline;\n","import React from \"react\";\nimport \"./SideBar.scss\";\nimport { List } from \"@material-ui/core/\";\nimport { Person, FolderSpecial, Assessment, LaptopMac } from \"@material-ui/icons/\";\nimport MenuListItem from \"./MenuListItem\";\nimport { EXPERIENCES } from \"../../data/experiences\";\nimport { PRIVATE_PROJECTS } from \"../../data/privateProject\";\nimport BaseTimeline from \"./BaseTimeline\";\n\nconst SideBar: React.FC = () => {\n  const menuList = [\n    {\n      text: \"About Me\",\n      icon: <Person />,\n      anchor: \"about-me\",\n    },\n    {\n      text: \"Experiences\",\n      icon: <Person />,\n      anchor: \"experiences-container\",\n      timeline: EXPERIENCES.map((exp) => ({\n        id: exp.id,\n        label: exp.company.name,\n        anchor: `#experience-${exp.id}`,\n      })),\n    },\n    { text: \"Skill Sets\", icon: <FolderSpecial />, anchor: \"skill-sets\" },\n    { text: \"My Values\", icon: <Assessment />, anchor: \"my-values\" },\n    { text: \"Favorites\", icon: <Assessment />, anchor: \"my-favorites\" },\n    {\n      text: \"Private Projects\",\n      icon: <LaptopMac />,\n      anchor: \"privateProjects\",\n      timeline: PRIVATE_PROJECTS.map((project) => ({\n        id: project.id,\n        label: project.serviceName,\n        anchor: `#privateProject-${project.id}`,\n      })),\n    },\n  ];\n\n  return (\n    <aside className='side-bar'>\n      <div className='headline'>\n        <List component='nav'>\n          {menuList.length > 0 &&\n            menuList.map((list: any, index: number) => (\n              <>\n                <MenuListItem key={index} text={list.text} anchor={list.anchor} />\n                <BaseTimeline lines={list.timeline} />\n              </>\n            ))}\n        </List>\n      </div>\n    </aside>\n  );\n};\n\nexport default SideBar;\n","import React from \"react\";\nimport \"./IconButtonLink.scss\";\nimport { IconButton } from \"@material-ui/core/\";\n\nconst IconButtonLink: React.FC<any | null> = ({ url, icon }) => {\n  return (\n    <IconButton className='icon-button' size='medium' href={url}>\n      {icon}\n    </IconButton>\n  );\n};\n\nexport default IconButtonLink;\n","export const formatDate = (date: Date, option: Intl.DateTimeFormatOptions = { month: \"short\", year: \"numeric\" }): string => {\n  return new Date(date.getTime() + new Date().getTimezoneOffset() * 60 * 1000).toLocaleDateString(\"en-US\", option);\n};\n\ntype TcalcDiff = {\n  year: number;\n  month: number;\n};\n\nexport const calcDiffDate = (start: Date, end: Date): TcalcDiff => {\n  const res: TcalcDiff = {\n    year: 0,\n    month: 0,\n  };\n  let diff: number = end.getTime() - start.getTime();\n  res.year = Math.floor(diff / (60 * 60 * 24 * 365 * 1000));\n  diff -= res.year * (60 * 60 * 24 * 365 * 1000);\n  if (diff > 0) {\n    res.month = Math.floor(diff / (60 * 60 * 24 * 30 * 1000));\n    diff -= res.year * (60 * 60 * 24 * 365 * 30 * 1000);\n  }\n  return res;\n};\n","import React from \"react\";\nimport \"./TopPage.scss\";\nimport { Button } from \"@material-ui/core\";\nimport { Build, Group, GitHub, LinkedIn, Twitter, Description, RateReview, DoneAll } from \"@material-ui/icons\";\nimport LinkIcon from \"@material-ui/icons/Link\";\nimport { PRIVATE_PROJECTS } from \"../../data/privateProject\";\nimport IconButtonLink from \"./IconButtonLink\";\nimport { EXPERIENCES } from \"../../data/experiences\";\nimport { calcDiffDate, formatDate } from \"../../utils/common\";\nconst iconData = [\n  { url: \"https://github.com/nk18chi\", element: <GitHub /> },\n  { url: \"https://www.linkedin.com/in/naoki-mita-ab186839/\", element: <LinkedIn /> },\n  { url: \"https://twitter.com/naokien1\", element: <Twitter /> },\n  { url: \"https://leetcode.com/nk18chi/\", element: <img src='/portfolio/img/icon/leetcode.svg' alt='' /> },\n];\n\ntype TSkillset = {\n  label: string;\n  icon: string;\n};\nconst skillSets: TSkillset[] = [\n  { label: \"Javascript\", icon: \"/portfolio/img/icon/javascript.svg\" },\n  { label: \"Typescript\", icon: \"/portfolio/img/icon/typescript.svg\" },\n  { label: \"Python\", icon: \"/portfolio/img/icon/python.svg\" },\n  { label: \"React\", icon: \"/portfolio/img/icon/react.svg\" },\n  { label: \"Node\", icon: \"/portfolio/img/icon/node.svg\" },\n  { label: \"Express\", icon: \"/portfolio/img/icon/express.svg\" },\n  { label: \"Mongo DB\", icon: \"/portfolio/img/icon/mongodb.svg\" },\n  { label: \"Next.js\", icon: \"/portfolio/img/icon/nextjs.svg\" },\n  { label: \"ElasticSearch\", icon: \"/portfolio/img/icon/elasticsearch.svg\" },\n  { label: \"Firebase\", icon: \"/portfolio/img/icon/firebase.svg\" },\n  { label: \"AWS\", icon: \"/portfolio/img/icon/aws.svg\" },\n  { label: \"Django\", icon: \"/portfolio/img/icon/django.svg\" },\n  { label: \"MySQL\", icon: \"/portfolio/img/icon/mysql.svg\" },\n  { label: \"WordPress\", icon: \"/portfolio/img/icon/wordpress.svg\" },\n  { label: \"Docker\", icon: \"/portfolio/img/icon/docker.svg\" },\n  { label: \"HTML\", icon: \"/portfolio/img/icon/html.svg\" },\n  { label: \"CSS\", icon: \"/portfolio/img/icon/css.svg\" },\n  { label: \"SASS\", icon: \"/portfolio/img/icon/sass.svg\" },\n  { label: \"GitHub Actions\", icon: \"/portfolio/img/icon/github.svg\" },\n  { label: \"Circle CI\", icon: \"/portfolio/img/icon/circle-ci.svg\" },\n  { label: \"Jest\", icon: \"/portfolio/img/icon/jest.svg\" },\n  { label: \"React Testing Library\", icon: \"/portfolio/img/icon/rtl.svg\" },\n  { label: \"Cypress\", icon: \"/portfolio/img/icon/cypress.svg\" },\n  { label: \"StoryBook\", icon: \"/portfolio/img/icon/storybook.svg\" },\n  { label: \"Stripe API\", icon: \"/portfolio/img/icon/stripe.svg\" },\n  { label: \"Salesforce Commerce API\", icon: \"/portfolio/img/icon/salesforce.svg\" },\n];\n\ntype TFavarites = {\n  title: string;\n  description: string[];\n  link: string;\n};\nconst favorites: TFavarites[] = [\n  {\n    title: \"A Philosophy of Software Design\",\n    description: [\n      \"Cause of complexity is two. Dependencies and obscurity\",\n      \"The ideal design tends to emerge in bits and pieces. Thus, the best approach is to make lots of small investments on continues basis\",\n      \"Interfaces should be desinged to make the common case as simple as possible. Interface should be less and implementation should be bigger.\",\n    ],\n    link: \"https://www.amazon.ca/Philosophy-Software-Design-John-Ousterhout/dp/1732102201\",\n  },\n  {\n    title: \"Clean Code\",\n    description: [\n      \"It is a myth that we can get systems “right the first time.” Instead, we should implement only today’s stories, then refactor and expand the system to implement new stories tomorrow. This is the essence of iterative and incremental agility. Test-driven development, refactoring, and the clean code they produce make this work at the code level.\",\n      \"Systems must be clean too. An invasive architecture overwhelms the domain logic and impacts agility. When the domain logic is obscured, quality suffers because bugs find it easier to hide and stories become harder to implement.If agility is compromised, productivity suffers and the benefits of TDD are lost.\",\n      \"Remarkably, following a simple and obvious rule that says we need to have tests and run them continuously impacts our system’s adherence to the primary OO goals of low coupling and high cohesion. Writing tests leads to better designs.\",\n      \"All too often we get our code working and then move on to the next problem without giving sufficient thought to making that code easy for the next person to read. Remember, the most likely next person to read the code will be you. So take a little pride in your workmanship. Spend a little time with each of your functions and classes. Choose better names, split large functions into smaller functions, and generally just take care of what you’ve created. Care is a precious resource.\",\n    ],\n    link: \"https://www.amazon.ca/Clean-Code-Handbook-Software-Craftsmanship/dp/0132350882/\",\n  },\n  {\n    title: \"Small Functions considered Harmful\",\n    description: [\n      \"“duplication is far cheaper than the wrong abstraction”, and thus to “prefer duplication over the wrong abstraction”.\",\n      \"The problem with “small functions” though, is that the quest for small functions ends up begetting even more small functions, all of which tend to be given extremely verbose names in the spirit of making code self documenting and eschewing comments.\",\n      \"Hard to Read: This has already been stated before but it bears reiterating — an explosion of small functions, especially one line functions, makes the codebase inordinately harder to read. This especially hurts those for whom the code should’ve been optimized for in the first place — newcomers.\",\n    ],\n    link: \"https://copyconstruct.medium.com/small-functions-considered-harmful-91035d316c29\",\n  },\n  {\n    title: \"Write Code Every Day\",\n    description: [\n      \"Writing code every day makes lots of benefits as a developer.\",\n      \"Code as habit. This is about a change that you’re making in your life for yourself not a change that you’re making to satisfy someone else’s perception of your work.\",\n      \"Background processing. Your current task is frequently running in the back of your mind when I go for a walk, or take a shower, or any of the other non-brain-using activities I participate in.\",\n    ],\n    link: \"https://johnresig.com/blog/write-code-every-day\",\n  },\n];\n\nconst myValues = [\n  {\n    icon: <Build className='color-green' />,\n    title: \"Passion for writing clean code\",\n    description:\n      \"As a developer, you spend much more time reading code than writing it. Therefore, I believe it is very important to consider how other developers understand my code more than how I want to write it.\",\n  },\n  {\n    icon: <DoneAll className='color-green' />,\n    title: \"Test believer\",\n    description:\n      \"Writing testing code makes code more readable. Besides, other developers are not afraid of changing your code without breaking existing functionalities.\",\n  },\n  {\n    icon: <RateReview className='color-green' />,\n    title: \"Love to review code and be reviewed\",\n    description:\n      \"I would like to know what other developers think of my code and how they write code. Reviewing code is a great chance to learn from others!\",\n  },\n  {\n    icon: <Group className='color-green' />,\n    title: \"Working as a team makes you go further\",\n    description:\n      \"I believe you can achieve more and get to your goal faster than you do alone. Great communication is built by the environment where everyone can be open to discussions.\",\n  },\n];\n\nconst totalExperience = calcDiffDate(new Date(\"2019-04-01\"), new Date());\nconst TopPage: React.FC = () => {\n  document.title = \"Naoki Mita - privateProject, online resume\";\n  return (\n    <article className='main-column'>\n      <section id='about-me' className='about-me block'>\n        <div className='summary-description'>\n          <h1>Naoki Mita</h1>\n          <h3>Software Developer / Full Stack Developer</h3>\n          <p>\n            I am a Full Stack developer with {totalExperience.year}+ years experience in software engineering, specializing in React.js, TypeScript,\n            and JavaScript. I am looking for a passionate engineering team to write clean code and tackle challenges together. I value an environment\n            where team members can learn from each other and make contributions. Please feel free to reach out to me!\n          </p>\n          <div id='externalLinks'>\n            <Button\n              href='https://docs.google.com/document/d/1GVcJ-RGKe2-6iPmtFZniVHD4ZNM1zV9tcE2bVAeZGpU/edit'\n              className='black-btn'\n              variant='contained'\n              size='large'\n              startIcon={<Description />}\n            >\n              View Resume\n            </Button>\n            <div className='social-link'>\n              <ul>{iconData.length > 0 && iconData.map((i: any, index: number) => <IconButtonLink key={index} url={i.url} icon={i.element} />)}</ul>\n            </div>\n          </div>\n        </div>\n        <div className='summary-image'>\n          <img className='main-thumnail' src='/portfolio/img/about_me.jpg' alt='' />\n        </div>\n      </section>\n\n      <section id='experiences-container' className='block'>\n        <h2>Experiences</h2>\n        {EXPERIENCES.map((exp, i) => {\n          const diff = calcDiffDate(exp.startDate, exp.endDate || new Date());\n          return (\n            <div key={exp.id} id={`experience-${i}`} className='experience'>\n              <div className='experience-headline'>\n                <h3>{exp.job.title}</h3>\n                <p>\n                  {formatDate(exp.startDate)} - {exp.endDate ? formatDate(exp.endDate) : \"Present\"} /{\" \"}\n                  {diff.year === 0 ? \"\" : diff.year > 1 ? `${diff.year} years` : `${diff.year} year`}{\" \"}\n                  {diff.month === 0 ? \"\" : diff.month > 1 ? `${diff.month} months` : `${diff.month} month`}\n                </p>\n              </div>\n              <p className='company-name'>{exp.company.name}</p>\n              <p>{exp.company.description}</p>\n              <ul className='list'>\n                {exp.job.contents.map((c) => (\n                  <li key={c}>{c}</li>\n                ))}\n              </ul>\n              <p>Tech Stack: {exp.tools.map((tool) => tool).join(\", \")}</p>\n            </div>\n          );\n        })}\n      </section>\n\n      <section id='skill-sets' className='skill-sets block'>\n        <h2>Skill Sets</h2>\n        <div id='skill-set-conainer'>\n          {skillSets.length > 0 &&\n            skillSets.map((skill, index: number) => (\n              <div key={index} className='skill-set'>\n                <img className='app-icon' src={skill.icon} alt='' />\n                {skill.label}\n              </div>\n            ))}\n        </div>\n      </section>\n\n      <section id='my-values' className='block'>\n        <h2>My Values</h2>\n        <div className='stack'>\n          {myValues.length > 0 &&\n            myValues.map((value: any, index: number) => (\n              <div key={index} className='vstack w-49'>\n                <div className='hstack'>\n                  {/* <span>{value.icon}</span> */}\n                  <h3>{value.title}</h3>\n                </div>\n                <p>{value.description}</p>\n              </div>\n            ))}\n        </div>\n      </section>\n\n      <section id='my-favorites' className='block'>\n        <h2>Favorites</h2>\n        <div id='my-favorites-container'>\n          {favorites.length > 0 &&\n            favorites.map((favorite, i: number) => (\n              <div key={i} className='my-favorite'>\n                <h3>\n                  <a href={favorite.link} target='_blank_'>\n                    {favorite.title}\n                  </a>\n                </h3>\n                <ul className='list'>\n                  {favorite.description.map((desc, j) => (\n                    <li key={j}>{desc}</li>\n                  ))}\n                </ul>\n              </div>\n            ))}\n        </div>\n      </section>\n\n      <section id='privateProjects' className='privateProjects block'>\n        <h2>Private Projects</h2>\n        <ul>\n          {PRIVATE_PROJECTS.length > 0 &&\n            PRIVATE_PROJECTS.map((privateProject, i) => (\n              <li key={privateProject.id} id={`privateProject-${i}`} className='privateProject-container'>\n                <div className='privateProject-description'>\n                  <h3>{privateProject.serviceName}</h3>\n                  <p>{privateProject.serviceDescription}</p>\n                  <p className='tool-list'>Tools: {privateProject.tools.length > 0 && privateProject.tools.map((tool) => tool).join(\", \")}</p>\n                  <div className='icon'>\n                    {privateProject.githubUrl && <IconButtonLink url={privateProject.githubUrl} icon={<GitHub />} />}\n                    {privateProject.website && <IconButtonLink url={privateProject.website} icon={<LinkIcon />} />}\n                  </div>\n                </div>\n              </li>\n            ))}\n        </ul>\n      </section>\n    </article>\n  );\n};\n\nexport default TopPage;\n","import React from \"react\";\nimport \"./index.scss\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport SideBar from \"./components/SideBar/SideBar\";\nimport TopPage from \"./components/TopPage/TopPage\";\n\nfunction App() {\n  return (\n    <>\n      <div className='container'>\n        <Router>\n          <SideBar />\n          <Switch>\n            <Route exact path='/' component={TopPage} />\n            <Route exact path='/portfolio' component={TopPage} />\n          </Switch>\n        </Router>\n      </div>\n      <footer>2020 © Naoki Mita. All Rights Reserved.</footer>\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}